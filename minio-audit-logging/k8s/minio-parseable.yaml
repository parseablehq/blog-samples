# Deploys a new Namespace for the MinIO Pod
apiVersion: v1
kind: Namespace
metadata:
  name: minio-parseable # Change this value if you want a different namespace name
  labels:
    name: minio-parseable # Change this value to match metadata.name
---
# Deploys a new MinIO Pod into the metadata.namespace Kubernetes namespace
#
# The `spec.containers[0].args` contains the command run on the pod
# The `/data` directory corresponds to the `spec.containers[0].volumeMounts[0].mountPath`
# That mount path corresponds to a Kubernetes HostPath which binds `/data` to a local drive or volume on the worker node where the pod runs
# 
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: minio
  name: minio
  namespace: minio-parseable # Change this value to match the namespace metadata.name
spec:
  containers:
  - name: minio
    image: quay.io/minio/minio:latest
    env:
    - name: MINIO_LOGGER_WEBHOOK_ENABLE_PARSEABLE
      value: "on"
    - name: MINIO_LOGGER_WEBHOOK_ENDPOINT_PARSEABLE
      value: "http://10.106.231.185:8000/api/v1/logstream/minio_log" # Change to yours
    - name: MINIO_LOGGER_WEBHOOK_AUTH_TOKEN_PARSEABLE
      value: "Basic YWRtaW46YWRtaW4="
    - name: MINIO_AUDIT_WEBHOOK_ENABLE_PARSEABLE
      value: "on"
    - name: MINIO_AUDIT_WEBHOOK_ENDPOINT_PARSEABLE
      value: "http://10.106.231.185:8000/api/v1/logstream/minio_audit" # Change to yours
    - name: MINIO_AUDIT_WEBHOOK_AUTH_TOKEN_PARSEABLE
      value: "Basic YWRtaW46YWRtaW4="
    command:
    - /bin/bash
    - -c
    args: 
    - minio server /data --console-address :9090
    volumeMounts:
    - mountPath: /data
      name: localvolume # Corresponds to the `spec.volumes` Persistent Volume
  nodeSelector:
    kubernetes.io/hostname: docker-desktop # Specify a node label associated to the Worker Node on which you want to deploy the pod.
  volumes:
  - name: localvolume
    hostPath: # MinIO generally recommends using locally-attached volumes
      path: /mnt/disk1/data # Specify a path to a local drive or volume on the Kubernetes worker node
      type: DirectoryOrCreate # The path to the last directory must exist
